<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>edu.si</groupId>
    <artifactId>fcrepo3-shim</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>integration-tests</artifactId>
  <packaging>bundle</packaging>

  <properties>
    <servlet.port>8080</servlet.port>
    <fedora.home>${project.build.directory}/fedora-home</fedora.home>
    <fuseki.base>${project.build.directory}/fuseki-base</fuseki.base>
    <fuseki.version>2.5.0</fuseki.version>
    <tinybundles.version>2.1.1</tinybundles.version>
    <logback.version>1.1.7</logback.version>
    <slf4j.version>1.7.20</slf4j.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.fcrepo.camel</groupId>
      <artifactId>fcrepo3-shim-core</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.ops4j.pax.tinybundles</groupId>
      <artifactId>tinybundles</artifactId>
      <version>${tinybundles.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>edu.si.trippi</groupId>
      <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
      <version>${trippi-sparql.version}</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-fuseki-war</artifactId>
      <version>${fuseki.version}</version>
      <type>war</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.camel.karaf</groupId>
      <artifactId>apache-camel</artifactId>
      <version>${camel.version}</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>


    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-karaf</artifactId>
      <version>${camel.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.karaf</groupId>
          <artifactId>org.apache.karaf.client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ops4j.pax.logging</groupId>
          <artifactId>pax-logging-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.ops4j.pax.logging</groupId>
          <artifactId>pax-logging-service</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.ops4j.pax.url</groupId>
      <artifactId>pax-url-aether</artifactId>
      <version>${url.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

  </dependencies>

  <build>

    <testResources>
      <testResource>
        <directory>${basedir}/src/test/resources</directory>
        <targetPath>${project.build.directory}</targetPath>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <extensions>true</extensions>
      </plugin>

      <!-- reserve network ports for integration testing -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <configuration>
          <portNames>
            <portName>dynamic.test.port</portName>
          </portNames>
        </configuration>
        <executions>
          <execution>
            <!-- we choose this phase to ensure that the chosen port number is available for test resource filtering, specifically 
              into fedora.fcfg -->
            <phase>process-test-sources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <argLine>${jacoco.agent.it.arg}</argLine>
          <systemPropertyVariables>
            <dynamic.test.port>${dynamic.test.port}</dynamic.test.port>
            <buildDirectory>${project.build.directory}</buildDirectory>
          </systemPropertyVariables>
        </configuration>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.6.2</version>
        <configuration>
          <container>
            <containerId>tomcat7x</containerId>
            <type>embedded</type>
            <systemProperties>
              <FUSEKI_BASE>${fuseki.base}</FUSEKI_BASE>
              <fedora.home>${fedora.home}</fedora.home>
              <!-- keep Apache Derby as quiet as possible -->
              <derby.stream.error.field>java.lang.System.err</derby.stream.error.field>
              <derby.stream.error.logSeverityLevel>5000</derby.stream.error.logSeverityLevel>
            </systemProperties>
          </container>
          <configuration>
            <properties>
              <cargo.logging>high</cargo.logging>
              <cargo.servlet.uriencoding>UTF-8</cargo.servlet.uriencoding>
              <cargo.jvmargs>-Xmx512m</cargo.jvmargs>
              <cargo.logging>high</cargo.logging>
              <cargo.servlet.port>${dynamic.test.port}</cargo.servlet.port>
              <!-- fire AJP into /dev/null -->
              <cargo.tomcat.ajp.port>0</cargo.tomcat.ajp.port>
            </properties>
          </configuration>
          <deployer><!-- empty deployer element prevents Cargo from trying to deploy shim, which is a bundle, into Tomcat -->
          </deployer>
          <deployables>
            <deployable>
              <groupId>org.apache.jena</groupId>
              <artifactId>jena-fuseki-war</artifactId>
              <type>war</type>
            </deployable>

            <deployable>
              <groupId>edu.si.trippi</groupId>
              <artifactId>trippi-sparql-fcrepo-webapp</artifactId>
              <type>war</type>
            </deployable>

          </deployables>
        </configuration>
        <executions>
          <execution>
            <id>start</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- to use versionAsInProject() for Pax Exam provisioning -->
      <plugin>
        <groupId>org.apache.servicemix.tooling</groupId>
        <artifactId>depends-maven-plugin</artifactId>
        <version>1.3.1</version>
        <executions>
          <execution>
            <id>generate-depends-file</id>
            <goals>
              <goal>generate-depends-file</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>